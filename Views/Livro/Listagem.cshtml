@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Livro>

@{
    ViewData["Title"] = "Listagem de Livros";
}

<div class="row">
    <div class="col-md-12">
        <form class="form-inline" method="POST">
            <div class="form-group mb-2">
                <select name="TipoFiltro" class="form-control">
                    <option value="Autor">Autor</option>
                    <option value="Titulo">Título</option>
                </select>
            </div>
            <div class="form-group mb-2 mx-sm-3">
                <input type="text" placeholder="Filtro" name="Filtro" class="form-control" />
            </div>
            <button type="submit" class="btn btn-primary mb-2">Pesquisar</button>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Título</th>
                    <th>Autor</th>
                    <th>Ano</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var livro in Model)
                {
                    <tr>
                        <td>@livro.Id</td>
                        <td>@livro.Titulo</td>
                        <td>@livro.Autor</td>
                        <td>@livro.Ano</td>
                        <td><a href="/Livro/Edicao/@livro.Id">Editar</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <nav aria-label="Páginas">
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("listagem", new { page = 1 })">Primeira</a>
                    </li>
                }
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Listagem", new { page = Model.PageNumber - 1 })">Anterior</a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Listagem", new { page = Model.PageNumber + 1 })">Próxima</a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Listagem", new { page = Model.PageCount })">Última</a>
                    </li>
                }
            </ul>
        </nav>
        @Html.PagedListPager(Model, page => Url.Action("Listagem", new { page }))
    </div>
</div>